# Generated by Django 5.2.5 on 2025-08-29 08:31

import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.BigIntegerField(help_text='Identyfikator rekordu z systemu źródłowego.', unique=True, verbose_name='ID zewnętrzne')),
                ('external_message_id', models.CharField(blank=True, help_text='Id wiadomości z systemu źródłowego (jeśli inne niż nagłówek).', max_length=255, verbose_name='Message-ID (zewn.)')),
                ('mailbox_id', models.BigIntegerField(blank=True, help_text='Identyfikator skrzynki/poczty w systemie źródłowym.', null=True, verbose_name='ID skrzynki')),
                ('thread_hint', models.CharField(blank=True, help_text='Wartość pomocnicza do późniejszego łączenia w wątki.', max_length=512, verbose_name='wstępny klucz wątku')),
                ('subject', models.CharField(blank=True, help_text='Temat wiadomości.', max_length=1000, verbose_name='temat')),
                ('sent_at', models.DateTimeField(blank=True, help_text='Czas wysłania (z nagłówków).', null=True, verbose_name='wysłano')),
                ('received_at', models.DateTimeField(blank=True, help_text='Czas odebrania/otrzymania w skrzynce.', null=True, verbose_name='odebrano')),
                ('direction', models.CharField(choices=[('received', 'Odebrana'), ('sent', 'Wysłana')], help_text='Czy wiadomość jest odebrana czy wysłana względem naszej skrzynki.', max_length=8, verbose_name='kierunek')),
                ('message_id_header', models.CharField(blank=True, help_text='Wartość z nagłówka Message-ID.', max_length=255, verbose_name='Message-ID (nagłówek)')),
                ('in_reply_to_header', models.CharField(blank=True, help_text='Wartość z nagłówka In-Reply-To (jeśli istnieje).', max_length=255, verbose_name='In-Reply-To')),
                ('references_header', models.TextField(blank=True, help_text='Połączona lista identyfikatorów z nagłówka References.', verbose_name='References (lista)')),
                ('text_plain', models.TextField(blank=True, help_text='Dekodowana treść text/plain (base64 → UTF-8).', verbose_name='treść (tekst)')),
                ('text_html', models.TextField(blank=True, help_text='Dekodowana treść text/html (base64 → UTF-8).', verbose_name='treść (HTML)')),
                ('text_html_parsed', models.TextField(blank=True, help_text='Dekodowana treść text/html (base64 → UTF-8) przekonwertowana w string', null=True, verbose_name='treść (HTML) String')),
                ('text_processed', models.TextField(blank=True, help_text='Przygotowany tekst', null=True, verbose_name='tekst przygotowany')),
                ('is_unread', models.BooleanField(blank=True, help_text='Stan nieprzeczytania; opcjonalny (może być nieznany).', null=True, verbose_name='nieprzeczytane')),
                ('raw_payload', models.JSONField(blank=True, help_text='Oryginalny obiekt zewnętrzny do celów audytu/diagnozy.', null=True, verbose_name='surowy JSON')),
                ('user_processed', models.BooleanField(db_index=True, default=False, verbose_name='Etykietowano przez Użytkownika')),
                ('useless', models.BooleanField(default=False, verbose_name='Nieprzydatny do nauczenia modeli.')),
            ],
            options={
                'verbose_name': 'Wiadomość e-mail',
                'verbose_name_plural': 'Wiadomości e-mail',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_key', models.CharField(db_index=True, help_text='Stabilny identyfikator wątku (np. Message-ID/In-Reply-To/References/temat).', max_length=512, unique=True, verbose_name='klucz wątku')),
                ('subject_norm', models.CharField(blank=True, help_text='Temat po usunięciu prefiksów typu RE:, FWD:, Odp:, itp.', max_length=500, verbose_name='temat (oczyszczony)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Czas utworzenia wątku w systemie.', verbose_name='utworzono')),
            ],
            options={
                'verbose_name': 'Wątek',
                'verbose_name_plural': 'Wątki',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Unikalny adres e-mail osoby.', max_length=254, unique=True, verbose_name='adres e-mail')),
                ('display_name', models.CharField(blank=True, help_text='Opcjonalna nazwa wyświetlana (z nagłówków wiadomości).', max_length=255, verbose_name='nazwa wyświetlana')),
                ('domain', models.CharField(blank=True, help_text='Domena wyprowadzona z adresu e-mail.', max_length=255, verbose_name='domena')),
            ],
            options={
                'verbose_name': 'Osoba',
                'verbose_name_plural': 'Osoby',
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('email'), name='unique_lower_email')],
            },
        ),
        migrations.CreateModel(
            name='MessageRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('to', 'Do'), ('cc', 'DW'), ('bcc', 'UDW')], help_text='Rodzaj adresata: Do/DW/UDW.', max_length=3, verbose_name='rodzaj')),
                ('message', models.ForeignKey(help_text='Wiadomość e-mail.', on_delete=django.db.models.deletion.CASCADE, related_name='message_recipients', to='ingestion.emailmessage', verbose_name='wiadomość')),
                ('person', models.ForeignKey(help_text='Osoba będąca adresatem.', on_delete=django.db.models.deletion.PROTECT, related_name='message_recipient_links', to='ingestion.person', verbose_name='osoba')),
            ],
            options={
                'verbose_name': 'Adresat',
                'verbose_name_plural': 'Adresaci',
                'unique_together': {('message', 'person', 'kind')},
            },
        ),
        migrations.AddField(
            model_name='emailmessage',
            name='delivered_to',
            field=models.ForeignKey(blank=True, help_text='Adres docelowy skrzynki, do której trafiła wiadomość (jeśli dostępny).', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delivered_messages', to='ingestion.person', verbose_name='dostarczono do'),
        ),
        migrations.AddField(
            model_name='emailmessage',
            name='from_person',
            field=models.ForeignKey(help_text='Osoba będąca nadawcą wiadomości.', on_delete=django.db.models.deletion.PROTECT, related_name='sent_messages', to='ingestion.person', verbose_name='nadawca'),
        ),
        migrations.AddField(
            model_name='emailmessage',
            name='recipients',
            field=models.ManyToManyField(help_text='Lista adresatów To/CC/BCC.', related_name='received_messages', through='ingestion.MessageRecipient', to='ingestion.person', verbose_name='adresaci'),
        ),
        migrations.AddField(
            model_name='emailmessage',
            name='thread',
            field=models.ForeignKey(blank=True, help_text='Powiązany wątek; może być puste (zostanie przypisane później).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='ingestion.thread', verbose_name='wątek'),
        ),
        migrations.CreateModel(
            name='PartnerStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg_count', models.PositiveIntegerField(default=0)),
                ('msg_processed_count', models.PositiveIntegerField(default=0)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ingestion.person')),
                ('b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ingestion.person')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('a', 'b'), name='uniq_partner_pair_ab')],
            },
        ),
    ]
